spring:
  profiles:
    active: local
  jpa:
    show_sql: false
    properties:
      hibernate:
        format_sql: true
    hibernate:
      ddl-auto: validate
  datasource:
    url: ${SOURCE_MYSQL_URL}
    username: ${SOURCE_MYSQL_USERNAME}
    password: ${SOURCE_MYSQL_PASSWORD}
  cloud:
    gcp:
      storage:
        credentials:
          location: ${GCS_CREDENTIALS}
        project-id: ${GCS_PROJECT_ID}
        bucket: ${GCS_BUCKET}
  servlet:
    multipart:
      max-file-size: 2GB
      max-request-size: 2GB
  sql:
    init:
      mode: always
      data-locations: classpath:db/init.sql
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  redis:
    data:
      host: ${SPRING_REDIS_HOST}
      port: ${SPRING_REDIS_PORT}
      password: ${SPRING_REDIS_PASSWORD}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

jwt:
  token:
    secret-key: ${JWT_SECRET_KEY}
    expire-length: 3600000

oauth:
  google:
    payload:
      client_id: ${GOOGLE_OAUTH_CLIENT_ID}
      client_secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
      redirect_uri: ${GOOGLE_OAUTH_REDIRECT_URL}
      grant_type: ${GOOGLE_OAUTH_GRANT_TYPE}

#TODO: 로깅 전략 수립
#logging:
#  level:
#    org:
#      hibernate:
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE
#        resource:
#          transaction: DEBUG
#      springframework:
#        transaction:
#          interceptor: TRACE
#        orm:
#          jpa:
#            JpaTransactionManager: DEBUG
server:
  port: 3000